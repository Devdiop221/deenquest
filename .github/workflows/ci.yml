name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: 1.2.16

    - name: Install dependencies
      run: bun install

    - name: Run tests
      run: ./scripts/test-all.sh

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        directory: ./coverage
        fail_ci_if_error: true

  build-server:
    name: Build Server
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: 1.2.16

    - name: Install dependencies
      run: |
        cd apps/server
        bun install

    - name: Build server
      run: |
        cd apps/server
        bun run build

    - name: Build Docker image
      run: |
        cd apps/server
        docker build -t deenquest-server .

  build-mobile:
    name: Build Mobile App
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup Expo
      uses: expo/expo-github-action@v8
      with:
        expo-version: latest
        eas-version: latest
        token: ${{ secrets.EXPO_TOKEN }}

    - name: Install dependencies
      run: |
        cd apps/native
        npm ci

    - name: Build preview
      run: |
        cd apps/native
        eas build --profile preview --platform all --non-interactive

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build-server, build-mobile]
    if: github.ref == 'refs/heads/develop'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to Vercel (Preview)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./apps/server

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-server, build-mobile]
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to Vercel (Production)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./apps/server